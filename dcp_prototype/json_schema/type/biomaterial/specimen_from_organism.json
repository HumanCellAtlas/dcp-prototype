{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Information about the specimen that was collected from the donor organism.",
    "additionalProperties": false,
    "required": [
        "describedBy",
        "schema_type",
        "biomaterial_core",
	    "organ"
    ],
    "title": "Specimen from organism",
    "name": "specimen_from_organism",
    "type": "object",
    "properties": {
        "describedBy":  {
            "description": "The URL reference to the schema.",
            "type": "string",
            "pattern" : "^(http|https)://schema.(.*?)humancellatlas.org/type/biomaterial/(([0-9]{1,}.[0-9]{1,}.[0-9]{1,})|([a-zA-Z]*?))/specimen_from_organism"
        },
        "schema_version": {
            "description": "The version number of the schema in major.minor.patch format.",
            "type": "string",
            "pattern": "^[0-9]{1,}.[0-9]{1,}.[0-9]{1,}$",
            "example": "4.6.1"
        },
        "schema_type": {
            "description": "The type of the metadata schema entity.",
            "type": "string",
            "enum": [
                "biomaterial"
            ]
        },
        "accession": {
            "description": "",
            "type": "string",
            "user_friendly": "Accession",
            "pattern": "HCASP[0-9]{5}[A-Z]{5}",
            "guidelines": "Do not submit. Assigned by the system."
        },
        "provenance" : {
            "description": "Provenance information provided by the system.",
            "type": "object",
            "$ref": "system/provenance.json"
        },
        "biomaterial_core" : {
            "description": "Core biomaterial-level information.",
            "type": "object",
            "$ref": "core/biomaterial/biomaterial_core.json",
            "user_friendly": "Biomaterial core"
        },
        "genus_species": {
            "description": "The scientific binomial name for the species of the specimen.",
            "type" : "array",
            "items":{
                "$ref": "module/ontology/species_ontology.json"
            },
            "user_friendly": "Genus species"
        },
        "system": {
            "description": "The organ system(s) that the biomaterial is within.",
            "type": "object",
            "$ref": "module/ontology/organ_ontology.json",
            "guidelines": "Do not submit. Assigned by the system based on ontological relationships.",
            "user_friendly": "Organ system"
        },
        "organ": {
            "description": "The organ(s) that the biomaterial is a part of.",
            "type": "object",
            "$ref": "module/ontology/organ_ontology.json",
            "guidelines": "Do not submit. Assigned by the system based on ontological relationships.",
            "user_friendly": "Organ"
        },
        "organ_part": {
            "description": "A term for a specific part of the organ that the biomaterial came from.",
            "type": "array",
            "items": {
                "$ref": "module/ontology/organ_part_ontology.json"
            },
            "guidelines": "The term organ part is very broadly defined here.",
            "user_friendly": "Organ part"
        },
        "diseases": {
            "description": "Short description of known disease(s) of the specimen.",
            "type": "array",
            "items": {
                "$ref": "module/ontology/disease_ontology.json"
	        },
            "user_friendly": "Disease status",
            "guidelines": "Enter normal if no known diseases."
        },
        "state_of_specimen": {
            "description": "State of the specimen at the time of collection.",
            "type": "object",
            "$ref": "module/biomaterial/state_of_specimen.json",
            "user_friendly": "State of specimen"
        },
        "preservation_storage": {
            "description": "Information about how a specimen was preserved and/or stored over a period of time.",
            "type": "object",
            "$ref": "module/biomaterial/preservation_storage.json",
            "user_friendly": "Preservation/Storage"
        },
        "collection_time": {
            "description": "When the biomaterial was collected.",
            "type": "string",
            "user_friendly": "Time of collection",
            "example": "2016-01-21T00:00:00Z; 2016-03",
            "guidelines": "Enter the time in date-time format: yyyy-mm-ddThh:mm:ssZ. Supplying partial date is allowed.",
            "oneOf": [
                 {
                    "format": "date-time"
                 },
                 {
                    "pattern": "^((19|20)\\d\\d){1}([- \\./][01]\\d){0,1}([- \\./][0-3]\\d){0,1}$"
                 }
              ]
        },
        "purchased_specimen": {
            "description": "Information about a purchased specimen.",
            "type": "object",
            "$ref": "module/process/purchased_reagents.json",
            "user_friendly": "Purchased specimen"
        },
        "donor_age": {
            "description": "Age of organism in Age units measured since birth.",
            "pattern": "^[0-9]+\\.?[0-9]*-?[0-9]*\\.?[0-9]*$",
            "type": "string",
            "user_friendly": "Age",
            "example": "20; 45-65",
            "guidelines": "Enter either a single value or a range of values. Indicate a range using a hyphen."
        }, 
        "donor_age_unit": {
            "description": "The unit in which Age is expressed.",
            "type": "object",
            "$ref": "module/ontology/time_unit_ontology.json",
            "user_friendly": "Age unit"
        },
        "donor_development_stage_at_collection": {
            "description": "A classification of the developmental stage of the organism.",
            "type": "object",
            "$ref": "module/ontology/development_stage_ontology.json",
            "user_friendly": "Development stage"
        },
        "donor_gestational_age": {
            "description": "Gestational age of pregnancy in Gestational age units measured from the last menstrual period.",
            "pattern": "^[0-9]+\\.?[0-9]*-?[0-9]*\\.?[0-9]*$",
            "type": "string",
            "user_friendly": "Gestational age",
            "example": "22; 8-9",
            "guidelines": "To calculate, add 2 weeks to embryonic post-ovulation age. Enter either a single value or indicate a range of values using a hyphen."
        },
        "donor_gestational_age_unit": {
            "description": "The unit in which Gestational age is expressed.",
            "type": "object",
            "$ref": "module/ontology/time_unit_ontology.json",
            "user_friendly": "Gestational age unit"
        },
        "donor_height": {
            "description": "Height of organism in Height unit.",
            "pattern": "^[0-9]+\\.?[0-9]*-?[0-9]*\\.?[0-9]*$",
            "type": "string",
            "user_friendly": "Height",
            "example": "160; 120-140",
            "guidelines": "Enter either a single value or a range of values. Indicate a range using a hyphen."
        },
        "donor_height_unit": {
            "description": "The unit in which Height is expressed.",
            "type": "object",
            "$ref": "module/ontology/length_unit_ontology.json",
            "user_friendly": "Height unit"
        },
        "donor_weight": {
            "description": "Weight of organism in Weight unit.",
            "pattern": "^[0-9]+\\.?[0-9]*-?[0-9]*\\.?[0-9]*$",
            "type": "string",
            "user_friendly": "Weight",
            "example": "60; 40-60",
            "guidelines": "Enter either a single value or a range of values. Indicate a range using a hyphen."
        },
        "donor_weight_unit": {
            "description": "The unit in which Weight is expressed.",
            "type": "object",
            "$ref": "module/ontology/mass_unit_ontology.json",
            "user_friendly": "Weight unit"
        },
        "donor_body_mass_index": {
            "description": "The body mass index of the donor.",
            "type": "number",
            "maximum": 100,
            "minimum": 5,
            "example": 36.4,
            "user_friendly": "Body mass index"
        }
    }
}
