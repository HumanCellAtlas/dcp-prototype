name: Push Tests

on:
  push:
    branches:
      - happy/cicd-2
  #     - main
  # pull_request:
  #   branches: "*"

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  DEPLOYMENT_STAGE: test
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
      - name: Lint Python
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          docker-compose run --no-deps --rm backend make -C /corpora-data-portal lint
      - name: Lint frontend
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          docker-compose run --no-deps --rm frontend make local-lint

  smoke-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
      - name: Run tests in docker-compose
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          docker image list
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          make local-sync
          make local-smoke-test

  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
      - name: Run tests in docker-compose
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          docker image list
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          make local-sync
          make local-unit-test

  push-image:
    needs:
      - unit-test
      - smoke-test
      - lint
    runs-on: ubuntu-20.04
    # if: github.ref == 'refs/heads/main'
    if: github.ref == 'refs/heads/happy/cicd-2'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
      - name: Build containers
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          docker-compose build
      - name: Docker Tags
        id: docker_tags
        shell: bash
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
        run: |
          echo "DOCKER_REPO=${ECR_REPO}/" > .env
          make tag-and-push
          docker image list
